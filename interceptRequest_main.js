const WHITELIST={'https://api.example.com/allowed':'1','lyra-wv-rpc://rpc/render/getEmbedWebViewEnv':'1','/^https:\\/\\/cdn\\.jsdelivr\\.net\\/.*/':'regex'}function isUrlAllowed(url){return Object.keys(WHITELIST).some(pattern=>{const isRegexPattern=WHITELIST[pattern]==='regex';if(isRegexPattern||(pattern.startsWith('/')&&pattern.endsWith('/'))){const regexPattern=isRegexPattern?pattern:pattern.slice(1,-1);const regex=new RegExp(regexPattern);return regex.test(url)}return url===pattern||url.startsWith(pattern)})}const originalFetch=window.fetch;window.fetch=async function(input,init){const url=typeof input==='string'?input:input.url;console.log(await isZfbEnvironment())if(!isUrlAllowed(url)){console.warn('[请求拦截] 接口不在允许列表中:',url);return new Response(JSON.stringify({code:403,message:'请求被拦截: 接口未授权'}),{status:403,headers:{'Content-Type':'application/json'}})}console.log('[请求放行]',url);return originalFetch(input,init)};const originalXhrOpen=XMLHttpRequest.prototype.open;XMLHttpRequest.prototype.open=function(method,url,async,user,password){this._requestUrl=url;const originalSend=this.send;this.send=(data)=>{if(!isUrlAllowed(this._requestUrl)){console.warn('[请求拦截] 接口不在允许列表中:',this._requestUrl);this.status=403;this.statusText='Forbidden';this.responseText=JSON.stringify({code:403,message:'请求被拦截: 接口未授权'});if(this.onreadystatechange)this.onreadystatechange();if(this.onload)this.onload();return}console.log('[请求放行]',this._requestUrl);originalSend.call(this,data)};return originalXhrOpen.call(this,method,url,async,user,password)};function isZfbEnvironment(){return new Promise((resolve)=>{console.log('判断是否是支付宝环境');if(typeof my==='undefined'||typeof my.getEnv!=='function'){resolve(false);return}const timeout=setTimeout(()=>{resolve(false)},5000);my.getEnv((res)=>{clearTimeout(timeout);resolve(!!res&&res.miniprogram)})})}
